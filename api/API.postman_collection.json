{
	"info": {
		"_postman_id": "mobx-api-collection",
		"name": "MobX API - V2 (UUPS Contract)",
		"description": "Collection completa para testar a API MobX - Sistema de Metadados e Contratos com contrato UUPS atualizado",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"version": "2.0.0"
	},
	"item": [
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/health",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"health"
					]
				},
				"description": "Verifica se a API está funcionando"
			},
			"response": []
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Generate Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.token) {",
									"        pm.collectionVariables.set('jwt_token', response.token);",
									"        console.log('Token JWT salvo automaticamente');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/token",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"token"
							]
						},
						"description": "Gera um token JWT válido para autenticação"
					},
					"response": []
				},
				{
					"name": "Validate Token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"description": "Token JWT para validar"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/validate",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"validate"
							]
						},
						"description": "Valida um token JWT"
					},
					"response": []
				}
			],
			"description": "Endpoints de autenticação JWT"
		},
		{
			"name": "Metadata",
			"item": [
				{
					"name": "Store Metadata",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"description": "Token JWT para autenticação"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"regConId\": \"6193a9b1-38a8-4d4b-a21a-8a8ca9aef9c9\",\n  \"numeroContrato\": \"250\",\n  \"dataContrato\": \"2022-03-08\",\n  \"cnpjAgenteFinanceiro\": \"03817784000133\",\n  \"nomeAgenteFinanceiro\": \"NATAL CAR VEICULOS LTDA\",\n  \"enderecoAgenteFinanceiro\": \"AV BERNARDO VIEIRA\",\n  \"numeroEnderecoAgenteFinanceiro\": \"3117\",\n  \"complementoEnderecoAgenteFinanceiro\": \"N/A\",\n  \"bairroEnderecoAgenteFinanceiro\": \"LAGOA SECA\",\n  \"nomeMunicipioEnderecoAgenteFinanceiro\": \"NATAL\",\n  \"ufEnderecoAgenteFinanceiro\": \"RN\",\n  \"cepEnderecoAgenteFinanceiro\": \"59022385\",\n  \"telefoneAgenteFinanceiro\": \"5584996412419\",\n  \"emailAgenteFinanceiro\": \"natal.car@gmail.com\",\n  \"cpfCnpjProprietario\": \"37235375000140\",\n  \"nomeProprietario\": \"DAC INVESTIMENTOS E PARTICIPACOES SA\",\n  \"enderecoProprietario\": \"SHIS QI 11 BLOCO M\",\n  \"numeroEnderecoProprietario\": \"3117\",\n  \"bairroEnderecoProprietario\": \"SHIS\",\n  \"nomeMunicipioProprietario\": \"NATAL\",\n  \"ufEnderecoProprietario\": \"RN\",\n  \"cepEnderecoProprietario\": \"71625620\",\n  \"telefoneProprietario\": \"5561984684398\",\n  \"emailProprietario\": \"dac.inv@gmail.com\",\n  \"veiculoZeroKm\": false,\n  \"chassiVeiculo\": \"8A1CB8205DL478385\",\n  \"chassiRemarcadoVeiculo\": \"2\",\n  \"placaVeiculo\": \"PGA4J42\",\n  \"tipoPlacaVeiculo\": \"01\",\n  \"ufPlacaVeiculo\": \"RN\",\n  \"renavamVeiculo\": \"00504329022\",\n  \"anoFabricacaoVeiculo\": \"2012\",\n  \"anoModeloVeiculo\": \"2013\",\n  \"numeroRestricaoVeiculo\": \"2055328\",\n  \"especieVeiculo\": \"AUTOMÓVEL\",\n  \"marcaVeiculo\": \"RENAULT\",\n  \"modeloVeiculo\": \"CLIO AUTHENTIQUE 1.0\",\n  \"tipoRestricacaoContrato\": \"1\",\n  \"ufRegistroContrato\": \"RN\",\n  \"cnpjResponsavelPeloRegistro\": \"42741476000123\",\n  \"valorTotalContrato\": \"23900.0\",\n  \"valorParcelaContrato\": \"11950.0\",\n  \"quantidadeParcelasContrato\": \"2\",\n  \"taxaJurosMesContrato\": \"0.01\",\n  \"taxaJurosMesAnoContrato\": \"0.01\",\n  \"possuiJurosMultaContrato\": \"N\",\n  \"taxaJurosMultaContrato\": \"0.0\",\n  \"possuiJurosMoraDiaContrato\": \"N\",\n  \"taxaJurosMoraDiaContrato\": \"0.0\",\n  \"valorCustoRegistroContrato\": \"395.0\",\n  \"valorIofContrato\": \"0.0\",\n  \"dataVencimentoPrimeiraParcelaContrato\": \"2022-03-08\",\n  \"dataVencimentoUltimaParcelaContrato\": \"2022-04-08\",\n  \"dataLiberacaoCreditoContrato\": \"2022-03-08\",\n  \"cidadeLiberacaoCreditoContrato\": \"NATAL\",\n  \"ufLiberacaoCreditoContrato\": \"RN\",\n  \"indiceCorrecaoContrato\": \"VALOR BEM\",\n  \"numeroGrupoConsorcioContrato\": \"N/A\",\n  \"numeroCotaConsorcioContrato\": \"0\",\n  \"indicativoPenalidadeContrato\": \"N\",\n  \"penalidadeContrato\": \"0\",\n  \"indicativoComissaoContrato\": \"N\",\n  \"comissaoContrato\": \"0.0\",\n  \"categoriaVeiculo\": \"ÚNICA (RN)\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/metadata/{{metadata_hash}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"metadata",
								"{{metadata_hash}}"
							]
						},
						"description": "Armazena metadados de um veículo com hash específico"
					},
					"response": []
				},
				{
					"name": "Get Metadata",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/metadata/{{metadata_hash}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"metadata",
								"{{metadata_hash}}"
							]
						},
						"description": "Busca metadados de um veículo pelo hash"
					},
					"response": []
				},
				{
					"name": "Update Metadata",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"description": "Token JWT para autenticação"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"regConId\": \"6193a9b1-38a8-4d4b-a21a-8a8ca9aef9c9\",\n  \"numeroContrato\": \"250\",\n  \"dataContrato\": \"2022-03-08\",\n  \"marcaVeiculo\": \"RENAULT\",\n  \"modeloVeiculo\": \"CLIO AUTHENTIQUE 1.0 - ATUALIZADO\",\n  \"valorTotalContrato\": \"25000.0\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/metadata/{{metadata_hash}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"metadata",
								"{{metadata_hash}}"
							]
						},
						"description": "Atualiza metadados de um veículo existente"
					},
					"response": []
				},
				{
					"name": "Delete Metadata",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"description": "Token JWT para autenticação"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/metadata/{{metadata_hash}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"metadata",
								"{{metadata_hash}}"
							]
						},
						"description": "Remove metadados de um veículo"
					},
					"response": []
				}
			],
			"description": "Operações CRUD para metadados de veículos"
		},
		{
			"name": "Contracts",
			"item": [
				{
					"name": "Register Contract",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.metadataHash) {",
									"        pm.collectionVariables.set('metadata_hash', response.metadataHash);",
									"        console.log('Hash dos metadados salvo: ' + response.metadataHash);",
									"    }",
									"    if (response.regConId) {",
									"        pm.collectionVariables.set('reg_con_id', response.regConId);",
									"        console.log('Registry ID salvo: ' + response.regConId);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"description": "Token JWT para autenticação"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"regConId\": \"{{$randomUUID}}\",\n  \"numeroContrato\": \"{{$randomInt}}\",\n  \"dataContrato\": \"2024-01-15\",\n  \"vehicleData\": {\n    \"regConId\": \"{{$randomUUID}}\",\n    \"numeroContrato\": \"{{$randomInt}}\",\n    \"dataContrato\": \"2024-01-15\",\n    \"cnpjAgenteFinanceiro\": \"03817784000133\",\n    \"nomeAgenteFinanceiro\": \"NATAL CAR VEICULOS LTDA\",\n    \"enderecoAgenteFinanceiro\": \"AV BERNARDO VIEIRA\",\n    \"numeroEnderecoAgenteFinanceiro\": \"3117\",\n    \"complementoEnderecoAgenteFinanceiro\": \"N/A\",\n    \"bairroEnderecoAgenteFinanceiro\": \"LAGOA SECA\",\n    \"nomeMunicipioEnderecoAgenteFinanceiro\": \"NATAL\",\n    \"ufEnderecoAgenteFinanceiro\": \"RN\",\n    \"cepEnderecoAgenteFinanceiro\": \"59022385\",\n    \"telefoneAgenteFinanceiro\": \"5584996412419\",\n    \"emailAgenteFinanceiro\": \"natal.car@gmail.com\",\n    \"cpfCnpjProprietario\": \"37235375000140\",\n    \"nomeProprietario\": \"DAC INVESTIMENTOS E PARTICIPACOES SA\",\n    \"enderecoProprietario\": \"SHIS QI 11 BLOCO M\",\n    \"numeroEnderecoProprietario\": \"3117\",\n    \"bairroEnderecoProprietario\": \"SHIS\",\n    \"nomeMunicipioProprietario\": \"NATAL\",\n    \"ufEnderecoProprietario\": \"RN\",\n    \"cepEnderecoProprietario\": \"71625620\",\n    \"telefoneProprietario\": \"5561984684398\",\n    \"emailProprietario\": \"dac.inv@gmail.com\",\n    \"veiculoZeroKm\": false,\n    \"chassiVeiculo\": \"{{$randomAlphaNumeric}}{{$randomAlphaNumeric}}{{$randomInt}}{{$randomAlphaNumeric}}{{$randomInt}}\",\n    \"chassiRemarcadoVeiculo\": \"2\",\n    \"placaVeiculo\": \"ABC{{$randomInt}}\",\n    \"tipoPlacaVeiculo\": \"01\",\n    \"ufPlacaVeiculo\": \"RN\",\n    \"renavamVeiculo\": \"{{$randomInt}}\",\n    \"anoFabricacaoVeiculo\": \"2023\",\n    \"anoModeloVeiculo\": \"2024\",\n    \"numeroRestricaoVeiculo\": \"{{$randomInt}}\",\n    \"especieVeiculo\": \"AUTOMÓVEL\",\n    \"marcaVeiculo\": \"TOYOTA\",\n    \"modeloVeiculo\": \"COROLLA ALTIS 2.0\",\n    \"tipoRestricacaoContrato\": \"1\",\n    \"ufRegistroContrato\": \"RN\",\n    \"cnpjResponsavelPeloRegistro\": \"42741476000123\",\n    \"valorTotalContrato\": \"85000.0\",\n    \"valorParcelaContrato\": \"1500.0\",\n    \"quantidadeParcelasContrato\": \"60\",\n    \"taxaJurosMesContrato\": \"0.0199\",\n    \"taxaJurosMesAnoContrato\": \"0.0199\",\n    \"possuiJurosMultaContrato\": \"S\",\n    \"taxaJurosMultaContrato\": \"0.02\",\n    \"possuiJurosMoraDiaContrato\": \"S\",\n    \"taxaJurosMoraDiaContrato\": \"0.0033\",\n    \"valorCustoRegistroContrato\": \"500.0\",\n    \"valorIofContrato\": \"120.0\",\n    \"dataVencimentoPrimeiraParcelaContrato\": \"2024-02-15\",\n    \"dataVencimentoUltimaParcelaContrato\": \"2029-01-15\",\n    \"dataLiberacaoCreditoContrato\": \"2024-01-15\",\n    \"cidadeLiberacaoCreditoContrato\": \"NATAL\",\n    \"ufLiberacaoCreditoContrato\": \"RN\",\n    \"indiceCorrecaoContrato\": \"IPCA\",\n    \"numeroGrupoConsorcioContrato\": \"N/A\",\n    \"numeroCotaConsorcioContrato\": \"0\",\n    \"indicativoPenalidadeContrato\": \"S\",\n    \"penalidadeContrato\": \"500.0\",\n    \"indicativoComissaoContrato\": \"S\",\n    \"comissaoContrato\": \"2.5\",\n    \"categoriaVeiculo\": \"SEDAN (RN)\"\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/contracts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contracts"
							]
						},
						"description": "Registra um novo contrato de financiamento no blockchain com ERC721 token"
					},
					"response": []
				},
				{
					"name": "Get Contract by Registry ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/contracts/{{reg_con_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contracts",
								"{{reg_con_id}}"
							]
						},
						"description": "Busca um contrato específico pelo Registry ID"
					},
					"response": []
				},
				{
					"name": "Get Contract by Token ID (NEW)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/contracts/token/{{token_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contracts",
								"token",
								"{{token_id}}"
							]
						},
						"description": "Busca um contrato específico pelo Token ID do ERC721"
					},
					"response": []
				},
				{
					"name": "Get Contract by Chassis (NEW)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/contracts/chassis/8A1CB8205DL478385",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contracts",
								"chassis",
								"8A1CB8205DL478385"
							]
						},
						"description": "Busca um contrato específico pelo número do chassi do veículo"
					},
					"response": []
				},
				{
					"name": "Get Active Contracts (Enhanced)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/contracts/active?offset=0&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contracts",
								"active"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "Offset para paginação"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Limite de registros por página"
								}
							]
						},
						"description": "Lista contratos ativos com informações de token ID, marca, modelo e valor total"
					},
					"response": []
				},
				{
					"name": "Get Contract by Hash",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/contracts/hash/{{metadata_hash}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contracts",
								"hash",
								"{{metadata_hash}}"
							]
						},
						"description": "Busca um contrato pelo hash dos metadados"
					},
					"response": []
				},
				{
					"name": "Get Contract Stats (Enhanced)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/contracts/stats",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contracts",
								"stats"
							]
						},
						"description": "Obtém estatísticas dos contratos incluindo versão do contrato e total supply"
					},
					"response": []
				},
				{
					"name": "Get Metadata URL by Hash (NEW)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/contracts/metadata-url/{{metadata_hash}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contracts",
								"metadata-url",
								"{{metadata_hash}}"
							]
						},
						"description": "Obtém a URL completa dos metadados pelo hash"
					},
					"response": []
				},
				{
					"name": "Get Metadata URL by Registry ID (NEW)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/contracts/metadata-url/registry/{{reg_con_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contracts",
								"metadata-url",
								"registry",
								"{{reg_con_id}}"
							]
						},
						"description": "Obtém a URL completa dos metadados pelo Registry ID"
					},
					"response": []
				}
			],
			"description": "Operações para registro e consulta de contratos com funcionalidades ERC721"
		},
		{
			"name": "Testing Scenarios",
			"item": [
				{
					"name": "Full Contract Lifecycle",
					"item": [
						{
							"name": "1. Generate Auth Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Token gerado com sucesso', function () {",
											"    pm.response.to.have.status(200);",
											"    const response = pm.response.json();",
											"    pm.expect(response.token).to.not.be.undefined;",
											"    pm.collectionVariables.set('jwt_token', response.token);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/auth/token",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"token"
									]
								}
							}
						},
						{
							"name": "2. Register New Contract",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Contrato registrado com sucesso', function () {",
											"    pm.response.to.have.status(201);",
											"    const response = pm.response.json();",
											"    pm.expect(response.success).to.be.true;",
											"    pm.expect(response.metadataHash).to.not.be.undefined;",
											"    pm.expect(response.txHash).to.not.be.undefined;",
											"    pm.collectionVariables.set('metadata_hash', response.metadataHash);",
											"    pm.collectionVariables.set('reg_con_id', response.regConId);",
											"    pm.collectionVariables.set('tx_hash', response.txHash);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Gerar dados únicos para cada teste",
											"pm.collectionVariables.set('test_reg_id', pm.variables.replaceIn('{{$randomUUID}}'));",
											"pm.collectionVariables.set('test_contract_num', pm.variables.replaceIn('{{$randomInt}}'));",
											"pm.collectionVariables.set('test_chassis', 'CH' + pm.variables.replaceIn('{{$randomAlphaNumeric}}{{$randomInt}}{{$randomAlphaNumeric}}'));",
											"pm.collectionVariables.set('test_plate', 'PL' + pm.variables.replaceIn('{{$randomInt}}'));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"regConId\": \"{{test_reg_id}}\",\n  \"numeroContrato\": \"{{test_contract_num}}\",\n  \"dataContrato\": \"2024-01-15\",\n  \"vehicleData\": {\n    \"regConId\": \"{{test_reg_id}}\",\n    \"numeroContrato\": \"{{test_contract_num}}\",\n    \"dataContrato\": \"2024-01-15\",\n    \"cnpjAgenteFinanceiro\": \"03817784000133\",\n    \"nomeAgenteFinanceiro\": \"NATAL CAR VEICULOS LTDA\",\n    \"chassiVeiculo\": \"{{test_chassis}}\",\n    \"placaVeiculo\": \"{{test_plate}}\",\n    \"marcaVeiculo\": \"TOYOTA\",\n    \"modeloVeiculo\": \"COROLLA ALTIS 2.0\",\n    \"valorTotalContrato\": \"85000.0\"\n  }\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/contracts",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contracts"
									]
								}
							}
						},
						{
							"name": "3. Get Contract by Registry ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Contrato encontrado por Registry ID', function () {",
											"    pm.response.to.have.status(200);",
											"    const response = pm.response.json();",
											"    pm.expect(response.success).to.be.true;",
											"    pm.expect(response.data.onChain).to.not.be.undefined;",
											"    pm.expect(response.data.offChain).to.not.be.undefined;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/contracts/{{reg_con_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contracts",
										"{{reg_con_id}}"
									]
								}
							}
						},
						{
							"name": "4. Get Contract by Chassis",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Contrato encontrado por Chassi', function () {",
											"    pm.response.to.have.status(200);",
											"    const response = pm.response.json();",
											"    pm.expect(response.success).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/contracts/chassis/{{test_chassis}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contracts",
										"chassis",
										"{{test_chassis}}"
									]
								}
							}
						},
						{
							"name": "5. Get Metadata URL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('URL de metadados obtida', function () {",
											"    pm.response.to.have.status(200);",
											"    const response = pm.response.json();",
											"    pm.expect(response.success).to.be.true;",
											"    pm.expect(response.url).to.not.be.undefined;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/contracts/metadata-url/registry/{{reg_con_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contracts",
										"metadata-url",
										"registry",
										"{{reg_con_id}}"
									]
								}
							}
						}
					],
					"description": "Cenário completo de teste do ciclo de vida do contrato"
				}
			],
			"description": "Cenários de teste automatizados"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Scripts globais de pré-requisito",
					"console.log('Executando requisição para:', pm.request.url.toString());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Scripts globais de teste",
					"pm.test('Response time is less than 5000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"pm.test('Response should not have errors', function () {",
					"    pm.response.to.not.have.status(500);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "string",
			"description": "URL base da API MobX"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string",
			"description": "Token JWT para autenticação (preenchido automaticamente)"
		},
		{
			"key": "metadata_hash",
			"value": "",
			"type": "string",
			"description": "Hash dos metadados (preenchido automaticamente)"
		},
		{
			"key": "reg_con_id",
			"value": "",
			"type": "string",
			"description": "Registry ID do contrato (preenchido automaticamente)"
		},
		{
			"key": "token_id",
			"value": "1",
			"type": "string",
			"description": "Token ID do ERC721"
		},
		{
			"key": "test_reg_id",
			"value": "",
			"type": "string",
			"description": "Registry ID para testes"
		},
		{
			"key": "test_contract_num",
			"value": "",
			"type": "string",
			"description": "Número do contrato para testes"
		},
		{
			"key": "test_chassis",
			"value": "",
			"type": "string",
			"description": "Chassi para testes"
		},
		{
			"key": "test_plate",
			"value": "",
			"type": "string",
			"description": "Placa para testes"
		},
		{
			"key": "tx_hash",
			"value": "",
			"type": "string",
			"description": "Hash da transação blockchain"
		}
	]
}
