basePath: /
definitions:
  models.ContractRegistrationRequest:
    properties:
      dataContrato:
        type: string
      numeroContrato:
        type: string
      regConId:
        type: string
      vehicleData:
        $ref: '#/definitions/models.VehicleData'
    required:
    - dataContrato
    - numeroContrato
    - regConId
    - vehicleData
    type: object
  models.ContractRegistrationResponse:
    properties:
      message:
        type: string
      metadataHash:
        type: string
      regConId:
        type: string
      success:
        type: boolean
      txHash:
        type: string
    type: object
  models.VehicleData:
    properties:
      anoFabricacaoVeiculo:
        type: string
      anoModeloVeiculo:
        type: string
      bairroEnderecoAgenteFinanceiro:
        type: string
      bairroEnderecoProprietario:
        type: string
      brandName:
        type: string
      categoriaVeiculo:
        type: string
      cepEnderecoAgenteFinanceiro:
        type: string
      cepEnderecoProprietario:
        type: string
      chassiRemarcadoVeiculo:
        type: string
      chassiVeiculo:
        type: string
      chassis:
        description: Campo para compatibilidade com blockchain
        type: string
      cidadeLiberacaoCreditoContrato:
        type: string
      cnpjAgenteFinanceiro:
        type: string
      cnpjResponsavelPeloRegistro:
        type: string
      comissaoContrato:
        type: string
      complementoEnderecoAgenteFinanceiro:
        type: string
      cpfCnpjProprietario:
        type: string
      dataContrato:
        type: string
      dataLiberacaoCreditoContrato:
        type: string
      dataVencimentoPrimeiraParcelaContrato:
        type: string
      dataVencimentoUltimaParcelaContrato:
        type: string
      emailAgenteFinanceiro:
        type: string
      emailProprietario:
        type: string
      enderecoAgenteFinanceiro:
        type: string
      enderecoProprietario:
        type: string
      especieVeiculo:
        type: string
      indicativoComissaoContrato:
        type: string
      indicativoPenalidadeContrato:
        type: string
      indiceCorrecaoContrato:
        type: string
      licensePlate:
        description: Campo para compatibilidade com blockchain
        type: string
      marcaVeiculo:
        type: string
      modelName:
        type: string
      modeloVeiculo:
        type: string
      nomeAgenteFinanceiro:
        type: string
      nomeMunicipioEnderecoAgenteFinanceiro:
        type: string
      nomeMunicipioProprietario:
        type: string
      nomeProprietario:
        type: string
      numeroContrato:
        type: string
      numeroCotaConsorcioContrato:
        type: string
      numeroEnderecoAgenteFinanceiro:
        type: string
      numeroEnderecoProprietario:
        type: string
      numeroGrupoConsorcioContrato:
        type: string
      numeroRestricaoVeiculo:
        type: string
      penalidadeContrato:
        type: string
      placaVeiculo:
        type: string
      possuiJurosMoraDiaContrato:
        type: string
      possuiJurosMultaContrato:
        type: string
      quantidadeParcelasContrato:
        type: string
      regConId:
        type: string
      renavamVeiculo:
        type: string
      taxaJurosMesAnoContrato:
        type: string
      taxaJurosMesContrato:
        type: string
      taxaJurosMoraDiaContrato:
        type: string
      taxaJurosMultaContrato:
        type: string
      telefoneAgenteFinanceiro:
        type: string
      telefoneProprietario:
        type: string
      tipoPlacaVeiculo:
        type: string
      tipoRestricacaoContrato:
        type: string
      totalValue:
        description: Campo para compatibilidade com blockchain
        type: string
      ufEnderecoAgenteFinanceiro:
        type: string
      ufEnderecoProprietario:
        type: string
      ufLiberacaoCreditoContrato:
        type: string
      ufPlacaVeiculo:
        type: string
      ufRegistroContrato:
        type: string
      valorCustoRegistroContrato:
        type: string
      valorIofContrato:
        type: string
      valorParcelaContrato:
        type: string
      valorTotalContrato:
        type: string
      veiculoZeroKm:
        type: boolean
    type: object
host: 144.22.179.183:3000
info:
  contact:
    email: support@mobx-api.com
    name: MobX API Support
  description: API para registro e consulta de contratos de financiamento automotivo
    utilizando blockchain Hyperledger Besu e contratos inteligentes UUPS
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: MobX API - VFinance Registry
  version: 3.0.0
paths:
  /api/auth/token:
    post:
      consumes:
      - application/json
      description: Gera um token JWT válido para autenticação
      produces:
      - application/json
      responses:
        "200":
          description: Token gerado com sucesso
          schema:
            properties:
              message:
                type: string
              success:
                type: boolean
              token:
                type: string
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            properties:
              error:
                type: string
              message:
                type: string
              success:
                type: boolean
              valid:
                type: boolean
            type: object
      summary: Generate JWT Token
      tags:
      - auth
  /api/auth/validate:
    get:
      consumes:
      - application/json
      description: Valida um token JWT
      produces:
      - application/json
      responses:
        "200":
          description: Token válido
          schema:
            properties:
              exp:
                type: integer
              message:
                type: string
              role:
                type: string
              success:
                type: boolean
              user_id:
                type: string
              valid:
                type: boolean
            type: object
        "401":
          description: Token inválido ou ausente
          schema:
            properties:
              error:
                type: string
              message:
                type: string
              success:
                type: boolean
              valid:
                type: boolean
            type: object
      security:
      - BearerAuth: []
      summary: Validate JWT Token
      tags:
      - auth
  /api/blockchain/admin/brand:
    post:
      consumes:
      - application/json
      description: Registra uma nova marca de veículo (apenas admin)
      parameters:
      - description: Dados da marca
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Marca registrada com sucesso
          schema:
            type: object
        "400":
          description: Dados inválidos
          schema:
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            type: object
      security:
      - BearerAuth: []
      summary: Register Brand
      tags:
      - write-operations
  /api/blockchain/admin/config:
    put:
      consumes:
      - application/json
      description: Atualiza configurações do servidor (apenas admin)
      parameters:
      - description: Configurações do servidor
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Configuração atualizada com sucesso
          schema:
            type: object
        "400":
          description: Dados inválidos
          schema:
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            type: object
      security:
      - BearerAuth: []
      summary: Update Server Config
      tags:
      - write-operations
  /api/blockchain/admin/model:
    post:
      consumes:
      - application/json
      description: Registra um novo modelo de veículo (apenas admin)
      parameters:
      - description: Dados do modelo
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Modelo registrado com sucesso
          schema:
            type: object
        "400":
          description: Dados inválidos
          schema:
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            type: object
      security:
      - BearerAuth: []
      summary: Register Model
      tags:
      - write-operations
  /api/blockchain/brand/{brandId}:
    get:
      consumes:
      - application/json
      description: Obtém nome da marca por ID on-chain
      parameters:
      - description: ID da marca
        in: path
        name: brandId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Nome da marca
          schema:
            type: object
        "400":
          description: Brand ID inválido
          schema:
            type: object
        "404":
          description: Marca não encontrada
          schema:
            type: object
      summary: Get Brand Name
      tags:
      - blockchain
  /api/blockchain/contract/exists/{registryId}:
    get:
      consumes:
      - application/json
      description: Verifica se contrato existe on-chain
      parameters:
      - description: Registry ID do contrato
        in: path
        name: registryId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Status de existência
          schema:
            type: object
        "400":
          description: Registry ID inválido
          schema:
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            type: object
      summary: Check Contract Exists
      tags:
      - blockchain
  /api/blockchain/contract/metadata:
    put:
      consumes:
      - application/json
      description: Atualiza o hash de metadados de um contrato existente
      parameters:
      - description: Dados para atualização
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Hash atualizado com sucesso
          schema:
            type: object
        "400":
          description: Dados inválidos
          schema:
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            type: object
      security:
      - BearerAuth: []
      summary: Update Metadata Hash
      tags:
      - write-operations
  /api/blockchain/contract/registry/{registryId}:
    get:
      consumes:
      - application/json
      description: Busca contrato on-chain por Registry ID
      parameters:
      - description: Registry ID do contrato
        in: path
        name: registryId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Contrato encontrado
          schema:
            type: object
        "400":
          description: Registry ID inválido
          schema:
            type: object
        "404":
          description: Contrato não encontrado
          schema:
            type: object
      summary: Get Contract by Registry ID
      tags:
      - blockchain
  /api/blockchain/contract/status:
    put:
      consumes:
      - application/json
      description: Ativa ou desativa um contrato existente
      parameters:
      - description: Dados para atualização
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Status atualizado com sucesso
          schema:
            type: object
        "400":
          description: Dados inválidos
          schema:
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            type: object
      security:
      - BearerAuth: []
      summary: Update Contract Status
      tags:
      - write-operations
  /api/blockchain/contract/token/{tokenId}:
    get:
      consumes:
      - application/json
      description: Busca contrato on-chain por Token ID do ERC721
      parameters:
      - description: Token ID do contrato
        in: path
        name: tokenId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Contrato encontrado
          schema:
            type: object
        "400":
          description: Token ID inválido
          schema:
            type: object
        "404":
          description: Contrato não encontrado
          schema:
            type: object
      summary: Get Contract by Token ID
      tags:
      - blockchain
  /api/blockchain/contracts/active:
    get:
      consumes:
      - application/json
      description: Lista contratos ativos on-chain com paginação
      parameters:
      - default: 0
        description: Offset para paginação
        in: query
        name: offset
        type: integer
      - default: 10
        description: Limite de resultados
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lista de contratos ativos
          schema:
            type: object
        "400":
          description: Parâmetros inválidos
          schema:
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            type: object
      summary: Get Active Contracts
      tags:
      - blockchain
  /api/blockchain/contracts/total:
    get:
      consumes:
      - application/json
      description: Obtém total de contratos on-chain
      produces:
      - application/json
      responses:
        "200":
          description: Total de contratos
          schema:
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            type: object
      summary: Get Total Supply
      tags:
      - blockchain
  /api/blockchain/hash/exists/{hash}:
    get:
      consumes:
      - application/json
      description: Verifica se hash existe on-chain
      parameters:
      - description: Hash para verificar
        in: path
        name: hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Status de existência
          schema:
            type: object
        "400":
          description: Hash inválido
          schema:
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            type: object
      summary: Check Hash Exists
      tags:
      - blockchain
  /api/blockchain/metadata-url/{hash}:
    get:
      consumes:
      - application/json
      description: Obtém URL dos metadados por hash on-chain
      parameters:
      - description: Hash dos metadados
        in: path
        name: hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: URL dos metadados
          schema:
            type: object
        "400":
          description: Hash inválido
          schema:
            type: object
        "404":
          description: URL não encontrada
          schema:
            type: object
      summary: Get Metadata URL by Hash
      tags:
      - blockchain
  /api/blockchain/metadata-url/registry/{registryId}:
    get:
      consumes:
      - application/json
      description: Obtém URL dos metadados por registry ID on-chain
      parameters:
      - description: Registry ID do contrato
        in: path
        name: registryId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: URL dos metadados
          schema:
            type: object
        "400":
          description: Registry ID inválido
          schema:
            type: object
        "404":
          description: URL não encontrada
          schema:
            type: object
      summary: Get Metadata URL by Registry ID
      tags:
      - blockchain
  /api/blockchain/model/{modelId}:
    get:
      consumes:
      - application/json
      description: Obtém nome do modelo por ID on-chain
      parameters:
      - description: ID do modelo
        in: path
        name: modelId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Nome do modelo
          schema:
            type: object
        "400":
          description: Model ID inválido
          schema:
            type: object
        "404":
          description: Modelo não encontrado
          schema:
            type: object
      summary: Get Model Name
      tags:
      - blockchain
  /api/blockchain/version:
    get:
      consumes:
      - application/json
      description: Obtém versão do contrato inteligente
      produces:
      - application/json
      responses:
        "200":
          description: Versão do contrato
          schema:
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            type: object
      summary: Get Contract Version
      tags:
      - blockchain
  /api/contracts:
    post:
      consumes:
      - application/json
      description: Registra novo contrato de financiamento automotivo (híbrido - blockchain
        + banco local)
      parameters:
      - description: Dados do contrato e veículo
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ContractRegistrationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Contrato registrado com sucesso
          schema:
            $ref: '#/definitions/models.ContractRegistrationResponse'
        "400":
          description: Dados inválidos ou campos obrigatórios ausentes
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: Token de autenticação inválido ou ausente
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Erro interno do servidor ou falha no blockchain
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Register Contract
      tags:
      - contracts
  /api/contracts/{regConId}:
    get:
      consumes:
      - application/json
      description: Busca contrato híbrido por Registry ID
      parameters:
      - description: Registry ID do contrato
        in: path
        name: regConId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Contrato encontrado
          schema:
            type: object
        "400":
          description: Registry ID inválido
          schema:
            type: object
        "404":
          description: Contrato não encontrado
          schema:
            type: object
      summary: Get Contract by Registry ID
      tags:
      - contracts
  /api/contracts/active:
    get:
      consumes:
      - application/json
      description: Lista contratos ativos (híbrido)
      parameters:
      - default: 0
        description: Offset para paginação
        in: query
        name: offset
        type: integer
      - default: 10
        description: Limite de resultados
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lista de contratos ativos
          schema:
            type: object
        "400":
          description: Parâmetros inválidos
          schema:
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            type: object
      summary: Get Active Contracts
      tags:
      - contracts
  /api/contracts/hash/{hash}:
    get:
      consumes:
      - application/json
      description: Busca contrato híbrido por Metadata Hash
      parameters:
      - description: Hash dos metadados
        in: path
        name: hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Contrato encontrado
          schema:
            type: object
        "400":
          description: Hash inválido
          schema:
            type: object
        "404":
          description: Contrato não encontrado
          schema:
            type: object
      summary: Get Contract by Hash
      tags:
      - contracts
  /api/contracts/stats:
    get:
      consumes:
      - application/json
      description: Estatísticas dos contratos (híbrido)
      produces:
      - application/json
      responses:
        "200":
          description: Estatísticas dos contratos
          schema:
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            type: object
      summary: Get Contract Stats
      tags:
      - contracts
  /api/metadata/{hash}:
    delete:
      consumes:
      - application/json
      description: Remove metadados de um veículo
      parameters:
      - description: Hash dos metadados
        in: path
        name: hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Metadados removidos com sucesso
          schema:
            type: object
        "400":
          description: Hash inválido
          schema:
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            type: object
      security:
      - BearerAuth: []
      summary: Delete Metadata
      tags:
      - metadata
    get:
      consumes:
      - application/json
      description: Busca metadados de um veículo pelo hash
      parameters:
      - description: Hash dos metadados
        in: path
        name: hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Metadados encontrados
          schema:
            type: object
        "400":
          description: Hash inválido
          schema:
            type: object
        "404":
          description: Metadados não encontrados
          schema:
            type: object
      summary: Get Metadata
      tags:
      - metadata
    post:
      consumes:
      - application/json
      description: Armazena metadados de um veículo
      parameters:
      - description: Hash dos metadados
        in: path
        name: hash
        required: true
        type: string
      - description: Dados do veículo
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Metadados armazenados com sucesso
          schema:
            type: object
        "400":
          description: Dados inválidos
          schema:
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            type: object
      security:
      - BearerAuth: []
      summary: Store Metadata
      tags:
      - metadata
    put:
      consumes:
      - application/json
      description: Atualiza metadados de um veículo
      parameters:
      - description: Hash dos metadados
        in: path
        name: hash
        required: true
        type: string
      - description: Dados do veículo
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Metadados atualizados com sucesso
          schema:
            type: object
        "400":
          description: Dados inválidos
          schema:
            type: object
        "500":
          description: Erro interno do servidor
          schema:
            type: object
      security:
      - BearerAuth: []
      summary: Update Metadata
      tags:
      - metadata
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Digite "Bearer" seguido de um espaço e o token JWT
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- description: Health check da API
  name: health
- description: Autenticação JWT
  name: auth
- description: Consultas diretas ao contrato inteligente - apenas dados on-chain
  name: blockchain
- description: Operações híbridas que combinam dados on-chain e off-chain
  name: contracts
- description: Operações CRUD para metadados de veículos
  name: metadata
- description: Operações de escrita no contrato inteligente - requer autenticação
  name: write-operations
