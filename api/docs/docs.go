// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "MobX API Support",
            "email": "support@mobx-api.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/auth/token": {
            "post": {
                "description": "Gera um token JWT válido para autenticação",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Generate JWT Token",
                "responses": {
                    "200": {
                        "description": "Token gerado com sucesso",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "success": {
                                    "type": "boolean"
                                },
                                "token": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "success": {
                                    "type": "boolean"
                                },
                                "valid": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/validate": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Valida um token JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Validate JWT Token",
                "responses": {
                    "200": {
                        "description": "Token válido",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "exp": {
                                    "type": "integer"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "role": {
                                    "type": "string"
                                },
                                "success": {
                                    "type": "boolean"
                                },
                                "user_id": {
                                    "type": "string"
                                },
                                "valid": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token inválido ou ausente",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "success": {
                                    "type": "boolean"
                                },
                                "valid": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/blockchain/admin/brand": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Registra uma nova marca de veículo (apenas admin)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "write-operations"
                ],
                "summary": "Register Brand",
                "parameters": [
                    {
                        "description": "Dados da marca",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Marca registrada com sucesso",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/blockchain/admin/config": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Atualiza configurações do servidor (apenas admin)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "write-operations"
                ],
                "summary": "Update Server Config",
                "parameters": [
                    {
                        "description": "Configurações do servidor",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configuração atualizada com sucesso",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/blockchain/admin/model": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Registra um novo modelo de veículo (apenas admin)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "write-operations"
                ],
                "summary": "Register Model",
                "parameters": [
                    {
                        "description": "Dados do modelo",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Modelo registrado com sucesso",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/blockchain/brand/{brandId}": {
            "get": {
                "description": "Obtém nome da marca por ID on-chain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blockchain"
                ],
                "summary": "Get Brand Name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID da marca",
                        "name": "brandId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nome da marca",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Brand ID inválido",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Marca não encontrada",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/blockchain/contract/exists/{registryId}": {
            "get": {
                "description": "Verifica se contrato existe on-chain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blockchain"
                ],
                "summary": "Check Contract Exists",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Registry ID do contrato",
                        "name": "registryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status de existência",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Registry ID inválido",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/blockchain/contract/metadata": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Atualiza o hash de metadados de um contrato existente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "write-operations"
                ],
                "summary": "Update Metadata Hash",
                "parameters": [
                    {
                        "description": "Dados para atualização",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hash atualizado com sucesso",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/blockchain/contract/registry/{registryId}": {
            "get": {
                "description": "Busca contrato on-chain por Registry ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blockchain"
                ],
                "summary": "Get Contract by Registry ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Registry ID do contrato",
                        "name": "registryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contrato encontrado",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Registry ID inválido",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Contrato não encontrado",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/blockchain/contract/status": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Ativa ou desativa um contrato existente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "write-operations"
                ],
                "summary": "Update Contract Status",
                "parameters": [
                    {
                        "description": "Dados para atualização",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status atualizado com sucesso",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/blockchain/contract/token/{tokenId}": {
            "get": {
                "description": "Busca contrato on-chain por Token ID do ERC721",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blockchain"
                ],
                "summary": "Get Contract by Token ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token ID do contrato",
                        "name": "tokenId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contrato encontrado",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Token ID inválido",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Contrato não encontrado",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/blockchain/contracts/active": {
            "get": {
                "description": "Lista contratos ativos on-chain com paginação",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blockchain"
                ],
                "summary": "Get Active Contracts",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset para paginação",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limite de resultados",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de contratos ativos",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Parâmetros inválidos",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/blockchain/contracts/total": {
            "get": {
                "description": "Obtém total de contratos on-chain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blockchain"
                ],
                "summary": "Get Total Supply",
                "responses": {
                    "200": {
                        "description": "Total de contratos",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/blockchain/hash/exists/{hash}": {
            "get": {
                "description": "Verifica se hash existe on-chain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blockchain"
                ],
                "summary": "Check Hash Exists",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hash para verificar",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status de existência",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Hash inválido",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/blockchain/metadata-url/registry/{registryId}": {
            "get": {
                "description": "Obtém URL dos metadados por registry ID on-chain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blockchain"
                ],
                "summary": "Get Metadata URL by Registry ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Registry ID do contrato",
                        "name": "registryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL dos metadados",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Registry ID inválido",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "URL não encontrada",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/blockchain/metadata-url/{hash}": {
            "get": {
                "description": "Obtém URL dos metadados por hash on-chain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blockchain"
                ],
                "summary": "Get Metadata URL by Hash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hash dos metadados",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL dos metadados",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Hash inválido",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "URL não encontrada",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/blockchain/model/{modelId}": {
            "get": {
                "description": "Obtém nome do modelo por ID on-chain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blockchain"
                ],
                "summary": "Get Model Name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do modelo",
                        "name": "modelId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nome do modelo",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Model ID inválido",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Modelo não encontrado",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/blockchain/version": {
            "get": {
                "description": "Obtém versão do contrato inteligente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "blockchain"
                ],
                "summary": "Get Contract Version",
                "responses": {
                    "200": {
                        "description": "Versão do contrato",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/contracts": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Registra novo contrato de financiamento automotivo (híbrido - blockchain + banco local)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Register Contract",
                "parameters": [
                    {
                        "description": "Dados do contrato e veículo",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContractRegistrationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Contrato registrado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/models.ContractRegistrationResponse"
                        }
                    },
                    "400": {
                        "description": "Dados inválidos ou campos obrigatórios ausentes",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token de autenticação inválido ou ausente",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor ou falha no blockchain",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/contracts/active": {
            "get": {
                "description": "Lista contratos ativos (híbrido)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Get Active Contracts",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset para paginação",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limite de resultados",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de contratos ativos",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Parâmetros inválidos",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/contracts/hash/{hash}": {
            "get": {
                "description": "Busca contrato híbrido por Metadata Hash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Get Contract by Hash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hash dos metadados",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contrato encontrado",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Hash inválido",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Contrato não encontrado",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/contracts/stats": {
            "get": {
                "description": "Estatísticas dos contratos (híbrido)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Get Contract Stats",
                "responses": {
                    "200": {
                        "description": "Estatísticas dos contratos",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/contracts/{regConId}": {
            "get": {
                "description": "Busca contrato híbrido por Registry ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Get Contract by Registry ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Registry ID do contrato",
                        "name": "regConId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contrato encontrado",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Registry ID inválido",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Contrato não encontrado",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/metadata/{hash}": {
            "get": {
                "description": "Busca metadados de um veículo pelo hash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "summary": "Get Metadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hash dos metadados",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metadados encontrados",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Hash inválido",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Metadados não encontrados",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Atualiza metadados de um veículo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "summary": "Update Metadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hash dos metadados",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados do veículo",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metadados atualizados com sucesso",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Armazena metadados de um veículo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "summary": "Store Metadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hash dos metadados",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados do veículo",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Metadados armazenados com sucesso",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove metadados de um veículo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "summary": "Delete Metadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hash dos metadados",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metadados removidos com sucesso",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Hash inválido",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ContractRegistrationRequest": {
            "type": "object",
            "required": [
                "dataContrato",
                "numeroContrato",
                "regConId",
                "vehicleData"
            ],
            "properties": {
                "dataContrato": {
                    "type": "string"
                },
                "numeroContrato": {
                    "type": "string"
                },
                "regConId": {
                    "type": "string"
                },
                "vehicleData": {
                    "$ref": "#/definitions/models.VehicleData"
                }
            }
        },
        "models.ContractRegistrationResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "metadataHash": {
                    "type": "string"
                },
                "regConId": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "txHash": {
                    "type": "string"
                }
            }
        },
        "models.VehicleData": {
            "type": "object",
            "properties": {
                "anoFabricacaoVeiculo": {
                    "type": "string"
                },
                "anoModeloVeiculo": {
                    "type": "string"
                },
                "bairroEnderecoAgenteFinanceiro": {
                    "type": "string"
                },
                "bairroEnderecoProprietario": {
                    "type": "string"
                },
                "brandName": {
                    "type": "string"
                },
                "categoriaVeiculo": {
                    "type": "string"
                },
                "cepEnderecoAgenteFinanceiro": {
                    "type": "string"
                },
                "cepEnderecoProprietario": {
                    "type": "string"
                },
                "chassiRemarcadoVeiculo": {
                    "type": "string"
                },
                "chassiVeiculo": {
                    "type": "string"
                },
                "chassis": {
                    "description": "Campo para compatibilidade com blockchain",
                    "type": "string"
                },
                "cidadeLiberacaoCreditoContrato": {
                    "type": "string"
                },
                "cnpjAgenteFinanceiro": {
                    "type": "string"
                },
                "cnpjResponsavelPeloRegistro": {
                    "type": "string"
                },
                "comissaoContrato": {
                    "type": "string"
                },
                "complementoEnderecoAgenteFinanceiro": {
                    "type": "string"
                },
                "cpfCnpjProprietario": {
                    "type": "string"
                },
                "dataContrato": {
                    "type": "string"
                },
                "dataLiberacaoCreditoContrato": {
                    "type": "string"
                },
                "dataVencimentoPrimeiraParcelaContrato": {
                    "type": "string"
                },
                "dataVencimentoUltimaParcelaContrato": {
                    "type": "string"
                },
                "emailAgenteFinanceiro": {
                    "type": "string"
                },
                "emailProprietario": {
                    "type": "string"
                },
                "enderecoAgenteFinanceiro": {
                    "type": "string"
                },
                "enderecoProprietario": {
                    "type": "string"
                },
                "especieVeiculo": {
                    "type": "string"
                },
                "indicativoComissaoContrato": {
                    "type": "string"
                },
                "indicativoPenalidadeContrato": {
                    "type": "string"
                },
                "indiceCorrecaoContrato": {
                    "type": "string"
                },
                "licensePlate": {
                    "description": "Campo para compatibilidade com blockchain",
                    "type": "string"
                },
                "marcaVeiculo": {
                    "type": "string"
                },
                "modelName": {
                    "type": "string"
                },
                "modeloVeiculo": {
                    "type": "string"
                },
                "nomeAgenteFinanceiro": {
                    "type": "string"
                },
                "nomeMunicipioEnderecoAgenteFinanceiro": {
                    "type": "string"
                },
                "nomeMunicipioProprietario": {
                    "type": "string"
                },
                "nomeProprietario": {
                    "type": "string"
                },
                "numeroContrato": {
                    "type": "string"
                },
                "numeroCotaConsorcioContrato": {
                    "type": "string"
                },
                "numeroEnderecoAgenteFinanceiro": {
                    "type": "string"
                },
                "numeroEnderecoProprietario": {
                    "type": "string"
                },
                "numeroGrupoConsorcioContrato": {
                    "type": "string"
                },
                "numeroRestricaoVeiculo": {
                    "type": "string"
                },
                "penalidadeContrato": {
                    "type": "string"
                },
                "placaVeiculo": {
                    "type": "string"
                },
                "possuiJurosMoraDiaContrato": {
                    "type": "string"
                },
                "possuiJurosMultaContrato": {
                    "type": "string"
                },
                "quantidadeParcelasContrato": {
                    "type": "string"
                },
                "regConId": {
                    "type": "string"
                },
                "renavamVeiculo": {
                    "type": "string"
                },
                "taxaJurosMesAnoContrato": {
                    "type": "string"
                },
                "taxaJurosMesContrato": {
                    "type": "string"
                },
                "taxaJurosMoraDiaContrato": {
                    "type": "string"
                },
                "taxaJurosMultaContrato": {
                    "type": "string"
                },
                "telefoneAgenteFinanceiro": {
                    "type": "string"
                },
                "telefoneProprietario": {
                    "type": "string"
                },
                "tipoPlacaVeiculo": {
                    "type": "string"
                },
                "tipoRestricacaoContrato": {
                    "type": "string"
                },
                "totalValue": {
                    "description": "Campo para compatibilidade com blockchain",
                    "type": "string"
                },
                "ufEnderecoAgenteFinanceiro": {
                    "type": "string"
                },
                "ufEnderecoProprietario": {
                    "type": "string"
                },
                "ufLiberacaoCreditoContrato": {
                    "type": "string"
                },
                "ufPlacaVeiculo": {
                    "type": "string"
                },
                "ufRegistroContrato": {
                    "type": "string"
                },
                "valorCustoRegistroContrato": {
                    "type": "string"
                },
                "valorIofContrato": {
                    "type": "string"
                },
                "valorParcelaContrato": {
                    "type": "string"
                },
                "valorTotalContrato": {
                    "type": "string"
                },
                "veiculoZeroKm": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Digite \"Bearer\" seguido de um espaço e o token JWT",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "description": "Health check da API",
            "name": "health"
        },
        {
            "description": "Autenticação JWT",
            "name": "auth"
        },
        {
            "description": "Consultas diretas ao contrato inteligente - apenas dados on-chain",
            "name": "blockchain"
        },
        {
            "description": "Operações híbridas que combinam dados on-chain e off-chain",
            "name": "contracts"
        },
        {
            "description": "Operações CRUD para metadados de veículos",
            "name": "metadata"
        },
        {
            "description": "Operações de escrita no contrato inteligente - requer autenticação",
            "name": "write-operations"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "3.0.0",
	Host:             "144.22.179.183:3000",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "MobX API - VFinance Registry",
	Description:      "API para registro e consulta de contratos de financiamento automotivo utilizando blockchain Hyperledger Besu e contratos inteligentes UUPS",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
