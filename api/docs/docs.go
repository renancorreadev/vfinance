// Package docs GENERATED BY SWAG; DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "MobX API Support",
            "email": "support@mobx-api.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/auth/token": {
            "post": {
                "description": "Gera um token JWT válido para autenticação nos endpoints protegidos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Gerar Token JWT",
                "responses": {
                    "200": {
                        "description": "Token gerado com sucesso",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/validate": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Valida se um token JWT é válido e está ativo",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Validar Token JWT",
                "responses": {
                    "200": {
                        "description": "Token válido",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "valid": {
                                    "type": "boolean"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/contracts": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Registra um novo contrato de financiamento na blockchain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Registrar Novo Contrato",
                "parameters": [
                    {
                        "description": "Dados do contrato",
                        "name": "contract",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContractRegistrationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Contrato registrado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/models.ContractRegistrationResponse"
                        }
                    }
                }
            }
        },
        "/api/contracts/active": {
            "get": {
                "description": "Lista contratos ativos com suporte à paginação",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Listar Contratos Ativos",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset para paginação",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limite de registros",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de contratos ativos",
                        "schema": {
                            "$ref": "#/definitions/models.ActiveContractsResponse"
                        }
                    }
                }
            }
        },
        "/api/contracts/chassis/{chassis}": {
            "get": {
                "description": "Busca um contrato específico pelo número do chassi do veículo",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Buscar Contrato por Chassi",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Número do chassi",
                        "name": "chassis",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contrato encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.CompleteContractData"
                        }
                    }
                }
            }
        },
        "/api/contracts/hash/{hash}": {
            "get": {
                "description": "Busca um contrato específico pelo hash dos metadados",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Buscar Contrato por Hash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hash dos metadados",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contrato encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.CompleteContractData"
                        }
                    }
                }
            }
        },
        "/api/contracts/metadata-url/registry/{registryId}": {
            "get": {
                "description": "Retorna a URL completa para acessar os metadados através do Registry ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Obter URL dos Metadados por Registry ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Registry ID",
                        "name": "registryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL obtida com sucesso",
                        "schema": {
                            "$ref": "#/definitions/models.MetadataUrlResponse"
                        }
                    }
                }
            }
        },
        "/api/contracts/metadata-url/{hash}": {
            "get": {
                "description": "Retorna a URL completa para acessar os metadados através do hash",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Obter URL dos Metadados por Hash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hash dos metadados",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL obtida com sucesso",
                        "schema": {
                            "$ref": "#/definitions/models.MetadataUrlResponse"
                        }
                    }
                }
            }
        },
        "/api/contracts/stats": {
            "get": {
                "description": "Retorna estatísticas agregadas do sistema incluindo total de contratos e versão do smart contract",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Estatísticas dos Contratos",
                "responses": {
                    "200": {
                        "description": "Estatísticas obtidas com sucesso",
                        "schema": {
                            "$ref": "#/definitions/models.StatsResponse"
                        }
                    }
                }
            }
        },
        "/api/contracts/token/{tokenId}": {
            "get": {
                "description": "Busca um contrato específico pelo Token ID do ERC721",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Buscar Contrato por Token ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token ID",
                        "name": "tokenId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contrato encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.CompleteContractData"
                        }
                    }
                }
            }
        },
        "/api/contracts/{regConId}": {
            "get": {
                "description": "Busca um contrato específico pelo Registry ID, retornando dados on-chain e off-chain",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Buscar Contrato por Registry ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Registry ID",
                        "name": "regConId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contrato encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.CompleteContractData"
                        }
                    }
                }
            }
        },
        "/api/metadata/{hash}": {
            "get": {
                "description": "Busca metadados de um veículo pelo hash",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "summary": "Buscar Metadados",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hash dos metadados",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metadados encontrados",
                        "schema": {
                            "$ref": "#/definitions/models.VehicleData"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Atualiza metadados de um veículo existente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "summary": "Atualizar Metadados",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hash dos metadados",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados do veículo",
                        "name": "vehicleData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.VehicleData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metadados atualizados com sucesso",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Armazena metadados de um veículo com hash específico",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "summary": "Armazenar Metadados",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hash dos metadados",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados do veículo",
                        "name": "vehicleData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.VehicleData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Metadados armazenados com sucesso",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove metadados de um veículo",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata"
                ],
                "summary": "Remover Metadados",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hash dos metadados",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metadados removidos com sucesso",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Verifica se a API está funcionando corretamente",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "API funcionando corretamente",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ActiveContractsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.ActiveContractsData"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.ActiveContractsData": {
            "type": "object",
            "properties": {
                "contracts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ContractSummary"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.CompleteContractData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "offChain": {
                            "$ref": "#/definitions/models.VehicleData"
                        },
                        "onChain": {
                            "$ref": "#/definitions/models.ContractRecord"
                        }
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.ContractRecord": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "dataContrato": {
                    "type": "string"
                },
                "metadataHash": {
                    "type": "string"
                },
                "numeroContrato": {
                    "type": "string"
                },
                "regConId": {
                    "type": "string"
                },
                "registeredBy": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "models.ContractRegistrationRequest": {
            "type": "object",
            "required": [
                "dataContrato",
                "numeroContrato",
                "regConId",
                "vehicleData"
            ],
            "properties": {
                "dataContrato": {
                    "type": "string"
                },
                "numeroContrato": {
                    "type": "string"
                },
                "regConId": {
                    "type": "string"
                },
                "vehicleData": {
                    "$ref": "#/definitions/models.VehicleData"
                }
            }
        },
        "models.ContractRegistrationResponse": {
            "type": "object",
            "properties": {
                "metadataHash": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "regConId": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "txHash": {
                    "type": "string"
                }
            }
        },
        "models.ContractSummary": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "brandName": {
                    "type": "string"
                },
                "dataContrato": {
                    "type": "string"
                },
                "metadataHash": {
                    "type": "string"
                },
                "modelName": {
                    "type": "string"
                },
                "numeroContrato": {
                    "type": "string"
                },
                "regConId": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "tokenId": {
                    "type": "string"
                },
                "totalValue": {
                    "type": "string"
                }
            }
        },
        "models.MetadataUrlResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.StatsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.StatsData"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.StatsData": {
            "type": "object",
            "properties": {
                "activeContracts": {
                    "type": "integer"
                },
                "contractVersion": {
                    "type": "string"
                },
                "totalContracts": {
                    "type": "integer"
                }
            }
        },
        "models.VehicleData": {
            "type": "object",
            "properties": {
                "anoFabricacaoVeiculo": {
                    "type": "string"
                },
                "anoModeloVeiculo": {
                    "type": "string"
                },
                "categoriaVeiculo": {
                    "type": "string"
                },
                "cepEnderecoAgenteFinanceiro": {
                    "type": "string"
                },
                "cepEnderecoProprietario": {
                    "type": "string"
                },
                "chassiRemarcadoVeiculo": {
                    "type": "string"
                },
                "chassiVeiculo": {
                    "type": "string"
                },
                "cidadeLiberacaoCreditoContrato": {
                    "type": "string"
                },
                "cnpjAgenteFinanceiro": {
                    "type": "string"
                },
                "cnpjResponsavelPeloRegistro": {
                    "type": "string"
                },
                "comissaoContrato": {
                    "type": "string"
                },
                "complementoEnderecoAgenteFinanceiro": {
                    "type": "string"
                },
                "cpfCnpjProprietario": {
                    "type": "string"
                },
                "dataContrato": {
                    "type": "string"
                },
                "dataLiberacaoCreditoContrato": {
                    "type": "string"
                },
                "dataVencimentoPrimeiraParcelaContrato": {
                    "type": "string"
                },
                "dataVencimentoUltimaParcelaContrato": {
                    "type": "string"
                },
                "emailAgenteFinanceiro": {
                    "type": "string"
                },
                "emailProprietario": {
                    "type": "string"
                },
                "enderecoAgenteFinanceiro": {
                    "type": "string"
                },
                "enderecoProprietario": {
                    "type": "string"
                },
                "especieVeiculo": {
                    "type": "string"
                },
                "indicativoComissaoContrato": {
                    "type": "string"
                },
                "indicativoPenalidadeContrato": {
                    "type": "string"
                },
                "indiceCorrecaoContrato": {
                    "type": "string"
                },
                "marcaVeiculo": {
                    "type": "string"
                },
                "modeloVeiculo": {
                    "type": "string"
                },
                "nomeMunicipioEnderecoAgenteFinanceiro": {
                    "type": "string"
                },
                "nomeMunicipioProprietario": {
                    "type": "string"
                },
                "nomeAgenteFinanceiro": {
                    "type": "string"
                },
                "nomeProprietario": {
                    "type": "string"
                },
                "numeroCotaConsorcioContrato": {
                    "type": "string"
                },
                "numeroEnderecoAgenteFinanceiro": {
                    "type": "string"
                },
                "numeroEnderecoProprietario": {
                    "type": "string"
                },
                "numeroGrupoConsorcioContrato": {
                    "type": "string"
                },
                "numeroRestricaoVeiculo": {
                    "type": "string"
                },
                "numeroContrato": {
                    "type": "string"
                },
                "penalidadeContrato": {
                    "type": "string"
                },
                "placaVeiculo": {
                    "type": "string"
                },
                "possuiJurosMoraDiaContrato": {
                    "type": "string"
                },
                "possuiJurosMultaContrato": {
                    "type": "string"
                },
                "quantidadeParcelasContrato": {
                    "type": "string"
                },
                "regConId": {
                    "type": "string"
                },
                "renavamVeiculo": {
                    "type": "string"
                },
                "taxaJurosMesAnoContrato": {
                    "type": "string"
                },
                "taxaJurosMesContrato": {
                    "type": "string"
                },
                "taxaJurosMoraDiaContrato": {
                    "type": "string"
                },
                "taxaJurosMultaContrato": {
                    "type": "string"
                },
                "telefoneAgenteFinanceiro": {
                    "type": "string"
                },
                "telefoneProprietario": {
                    "type": "string"
                },
                "tipoPlacaVeiculo": {
                    "type": "string"
                },
                "tipoRestricacaoContrato": {
                    "type": "string"
                },
                "ufEnderecoAgenteFinanceiro": {
                    "type": "string"
                },
                "ufEnderecoProprietario": {
                    "type": "string"
                },
                "ufLiberacaoCreditoContrato": {
                    "type": "string"
                },
                "ufPlacaVeiculo": {
                    "type": "string"
                },
                "ufRegistroContrato": {
                    "type": "string"
                },
                "valorCustoRegistroContrato": {
                    "type": "string"
                },
                "valorIofContrato": {
                    "type": "string"
                },
                "valorParcelaContrato": {
                    "type": "string"
                },
                "valorTotalContrato": {
                    "type": "string"
                },
                "veiculoZeroKm": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Bearer token for authentication. Format: Bearer {token}",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0.0",
	Host:             "localhost:3000",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "MobX API - VFinance Registry",
	Description:      "API para registro e consulta de contratos de financiamento automotivo utilizando blockchain Hyperledger Besu e contratos inteligentes UUPS",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
